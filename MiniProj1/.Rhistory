nSteps <-10000
nLoop <-5
for(i in 1 : nLoop) {}
for(i in 1 : nLoop) { X <- rexp(nSteps,0.2)
print X }
print X }
for(i in 1 : nLoop) { X <- rexp(nSteps,0.2) ; print X }
for(i in 1 : nLoop) { X <- rexp(nSteps,0.2)  print X }
print X
print 'X'
}
print X
nLoop
nLoop
X
X
X <- replicate(1000,max(rexp(3,rate = rate)))
X <- replicate(1000,max(rexp(3,rate = 0.2)))
X <- max(rexp(3,rate = 0.2))
X <- max(rexp(10,rate = 0.2))
rexp(10, rate = 0.2)
rexp(3, rate = 0.2)
X
X <- replicate(nSteps,max(rexp(3,rate = rate)))
rate <- 0.2
nSteps <-10000
nLoop <- 1
rate <- 0.2
for (i in 1:nLoop) {
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X
}
X <- max(rexp(3,rate = rate))
X <- rexp(3,rate = rate)
replicate(100, rexp(3, rate = rate))
nSteps <-10
X
nSteps <-10
nLoop <- 1
rate <- 0.2
for (i in 1:nLoop) {
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X
}
X <- replicate(10,max(rexp(3,rate = rate)))
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X <- replicate(10,max(rexp(3,rate = rate)))
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X
rate <- 0.3
for (i in 1:nLoop) {
X <- replicate(10,max(rexp(3,rate = rate)))
X <- replicate(nSteps,max(rexp(3,rate = rate)))
nSteps <-10
nLoop <- 1
rate <- 0.2
for (i in 1:nLoop) {
X <- replicate(nSteps,max(rexp(3,rate = rate)))
X
}
;
X <- replicate(nSteps,max(rexp(3,rate = rate)))
;
xXZX
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
# densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn(X), add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-5
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 10000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 10000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 1000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 10000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 10000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# density Function to get the probability density of experiment
densityFn <- function(x){
dexp(x,rate = rate)
}
densityFn(X)
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(densityFn, add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# Building histogram
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(0.6*(1-exp(-0.2*x))^2*exp(-0.2*x), add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# Building histogram
# opening new window everytime
dev.new()
hist(X,probability = TRUE ,main = "Histogram")
# building curve
curve(0.6*(1-exp(-0.2*x))^2*exp(-0.2*x), add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# Building histogram
# opening new window everytime
dev.new()
hist(X,probability = TRUE ,main = "Histogram" , col ="blue")
# building curve
curve(0.6*(1-exp(-0.2*x))^2*exp(-0.2*x), add = TRUE , col = "violet")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
" This fucntion takes input as number of Simulation of trials and
return as mean of experiment performed"
calExpectedValue <- function(nSteps) {
nExp <- 3
rate <- 0.2
# replciating the experiment number of times as entered by the user
# rate is 0.2 /min becasue mean is given as 5 min
X <- replicate(nSteps,max(rexp(nExp,rate = rate)))
# Building histogram
# opening new window everytime
dev.new()
hist(X,probability = TRUE ,main = "Histogram" , col ="blue")
# building curve
curve(0.6*(1-exp(-0.2*x))^2*exp(-0.2*x), add = TRUE , col = "red")
# calculation mean
expValue <- mean(X)
return (expValue)
}
# Initial Setup to perform experiment
nSteps <- 100000
nTrials <-1
# replication of whole experiment n number of times
expValue <-replicate(nTrials,calExpectedValue(nSteps))
# expvalue is a vector which contains mean for all trials
expValue
